function kembali(){
    cekLogin();
    $.mobile.changePage("#mainmenu", {
        transition: "slide", 
        reverse: true
    });
};
function inbox(){
    cekLogin()
    $.mobile.changePage("#inbox", {
        transition: "slide", 
        reverse: false
    });
                
};
function create(){
    cekLogin()
    $.mobile.changePage("#create", {
        transition: "none", 
        reverse: false
    });
                
                
};
function group(){
    cekLogin()
    $.mobile.changePage("#group", {
        transition: "none", 
        reverse: false
    });
};
function schedule(){
    cekLogin()
    $.mobile.changePage("#schedule", {
        transition: "none", 
        reverse: false
    });
};
function twitter(){
    cekLogin()
    $.mobile.changePage("#twitter", {
        transition: "slide", 
        reverse: false
    });
};
function reader(){
    cekLogin()
    $.mobile.changePage("#reader", {
        transition: "slide", 
        reverse: false
    });
};
            
function about(){
    cekLogin()
    $.mobile.changePage("#about", {
        transition: "slide", 
        reverse: false
    });
};
            
function help(){
    cekLogin()
    $.mobile.changePage("#help", {
        transition: "slide", 
        reverse: false
    });
};
            
function datePicker (){
    var currentField = $(this);
    var myNewDate = Date.parse(currentField.val()) || new Date();
		
    // Same handling for iPhone and Android
    window.plugins.datePicker.show({
        date : myNewDate,
        mode : 'date', // date or time or blank for both
        allowOldDates : true
    }, function(returnDate) {
        var newDate = new Date(returnDate);
        currentField.val(newDate.toString("dd/MMM/yyyy"));
		
        // This fixes the problem you mention at the bottom of this script with it not working a second/third time around, because it is in focus.
        currentField.blur();
    });
};
		    
		    
function timePicker()
{
    var currentField = $(this);
    var time = currentField.val();
    var myNewTime = new Date();
		
    myNewTime.setHours(time.substr(0, 2));
    myNewTime.setMinutes(time.substr(3, 2));
		
    // Same handling for iPhone and Android
    plugins.datePicker.show({
        date : myNewTime,
        mode : 'time', // date or time or blank for both
        allowOldDates : true
    }, function(returnDate) {
        // returnDate is generated by .toLocaleString() in Java so it will be relative to the current time zone
        var newDate = new Date(returnDate);
        currentField.val(newDate.toString("HH:mm"));
		
        currentField.blur();
    });
};
            
            
            